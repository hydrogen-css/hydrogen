// Padding
// SIDE, SIZE
// e.g. data-h2-padding="b(all, x3)"
// e.g. data-h2-padding="b(top, x5)"
@mixin h2-utility-padding($mediaKey, $stateMap, $sideMap, $whitespaceMap) {
  @each $stateKey, $stateValue in $stateMap {
    @each $sideKey, $sideValue in $sideMap {
      @each $whitespaceKey, $whitespaceValue in $whitespaceMap {
        // All comes first, and has the simplest specificity, because it needs to be overwritten by all other padding options.
        @if $sideKey == 'all' {
          [data-h2-padding*='#{$mediaKey}#{$stateKey}(#{$sideKey}, #{$whitespaceKey})']#{$stateValue} {
            padding: #{$whitespaceValue};
          }
        // top-bottom and right-left need to come next, and have to be separated out because they have unique side requirements due to the need to target only two of the four sides. Both of these options need to have added specificity to overwrite "all".
        } @else if $sideKey == 'top-bottom' or $sideKey == 'bottom-top' {
          [data-h2-padding*='#{$mediaKey}#{$stateKey}(#{$sideKey}, #{$whitespaceKey})']#{$stateValue},
          [data-h2-padding*='#{$mediaKey}#{$stateKey}(all,'][data-h2-padding*='#{$mediaKey}#{$stateKey}(#{$sideKey}, #{$whitespaceKey})']#{$stateValue} {
            padding-top: #{$whitespaceValue};
            padding-bottom: #{$whitespaceValue};
          }
        } @else if $sideKey == 'right-left' or $sideKey == 'left-right' {
          [data-h2-padding*='#{$mediaKey}#{$stateKey}(#{$sideKey}, #{$whitespaceKey})']#{$stateValue},
          [data-h2-padding*='#{$mediaKey}#{$stateKey}(all,'][data-h2-padding*='#{$mediaKey}#{$stateKey}(#{$sideKey}, #{$whitespaceKey})']#{$stateValue} {
            padding-right: #{$whitespaceValue};
            padding-left: #{$whitespaceValue};
          }
        // Finally all other individual side options, where the specificity is the heaviest, because it needs to overwrite all as well as the dual side options.
        } @else {
          [data-h2-padding*='#{$mediaKey}#{$stateKey}(#{$sideKey}, #{$whitespaceKey})']#{$stateValue},
          [data-h2-padding*='#{$mediaKey}#{$stateKey}(all,'][data-h2-padding*='#{$mediaKey}#{$stateKey}(#{$sideKey}, #{$whitespaceKey})']#{$stateValue},
          [data-h2-padding*='#{$mediaKey}#{$stateKey}(top-bottom,'][data-h2-padding*='#{$mediaKey}#{$stateKey}(#{$sideKey}, #{$whitespaceKey})']#{$stateValue},
          [data-h2-padding*='#{$mediaKey}#{$stateKey}(bottom-top,'][data-h2-padding*='#{$mediaKey}#{$stateKey}(#{$sideKey}, #{$whitespaceKey})']#{$stateValue},
          [data-h2-padding*='#{$mediaKey}#{$stateKey}(right-left,'][data-h2-padding*='#{$mediaKey}#{$stateKey}(#{$sideKey}, #{$whitespaceKey})']#{$stateValue},
          [data-h2-padding*='#{$mediaKey}#{$stateKey}(left-right,'][data-h2-padding*='#{$mediaKey}#{$stateKey}(#{$sideKey}, #{$whitespaceKey})']#{$stateValue} {
            padding#{$sideValue}: #{$whitespaceValue};
          }
        }
      }
    }
  }
}